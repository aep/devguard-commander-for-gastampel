// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.0
// source: carrier.sysinfo.v1.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Netdev_Duplex int32

const (
	Netdev_Invalid Netdev_Duplex = 0
	Netdev_Half    Netdev_Duplex = 1
	Netdev_Full    Netdev_Duplex = 2
)

// Enum value maps for Netdev_Duplex.
var (
	Netdev_Duplex_name = map[int32]string{
		0: "Invalid",
		1: "Half",
		2: "Full",
	}
	Netdev_Duplex_value = map[string]int32{
		"Invalid": 0,
		"Half":    1,
		"Full":    2,
	}
)

func (x Netdev_Duplex) Enum() *Netdev_Duplex {
	p := new(Netdev_Duplex)
	*p = x
	return p
}

func (x Netdev_Duplex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Netdev_Duplex) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_sysinfo_v1_proto_enumTypes[0].Descriptor()
}

func (Netdev_Duplex) Type() protoreflect.EnumType {
	return &file_carrier_sysinfo_v1_proto_enumTypes[0]
}

func (x Netdev_Duplex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Netdev_Duplex.Descriptor instead.
func (Netdev_Duplex) EnumDescriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{6, 0}
}

type Arp_HwType int32

const (
	Arp_Unknown  Arp_HwType = 0
	Arp_Ethernet Arp_HwType = 1
)

// Enum value maps for Arp_HwType.
var (
	Arp_HwType_name = map[int32]string{
		0: "Unknown",
		1: "Ethernet",
	}
	Arp_HwType_value = map[string]int32{
		"Unknown":  0,
		"Ethernet": 1,
	}
)

func (x Arp_HwType) Enum() *Arp_HwType {
	p := new(Arp_HwType)
	*p = x
	return p
}

func (x Arp_HwType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Arp_HwType) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_sysinfo_v1_proto_enumTypes[1].Descriptor()
}

func (Arp_HwType) Type() protoreflect.EnumType {
	return &file_carrier_sysinfo_v1_proto_enumTypes[1]
}

func (x Arp_HwType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Arp_HwType.Descriptor instead.
func (Arp_HwType) EnumDescriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{15, 0}
}

type Satellite_Constellation int32

const (
	Satellite_Unknown Satellite_Constellation = 0
	Satellite_Galileo Satellite_Constellation = 1
	Satellite_Gps     Satellite_Constellation = 2
	Satellite_Glonass Satellite_Constellation = 3
)

// Enum value maps for Satellite_Constellation.
var (
	Satellite_Constellation_name = map[int32]string{
		0: "Unknown",
		1: "Galileo",
		2: "Gps",
		3: "Glonass",
	}
	Satellite_Constellation_value = map[string]int32{
		"Unknown": 0,
		"Galileo": 1,
		"Gps":     2,
		"Glonass": 3,
	}
)

func (x Satellite_Constellation) Enum() *Satellite_Constellation {
	p := new(Satellite_Constellation)
	*p = x
	return p
}

func (x Satellite_Constellation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Satellite_Constellation) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_sysinfo_v1_proto_enumTypes[2].Descriptor()
}

func (Satellite_Constellation) Type() protoreflect.EnumType {
	return &file_carrier_sysinfo_v1_proto_enumTypes[2]
}

func (x Satellite_Constellation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Satellite_Constellation.Descriptor instead.
func (Satellite_Constellation) EnumDescriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{19, 0}
}

type Location_Fix int32

const (
	Location_None       Location_Fix = 0
	Location_Gps        Location_Fix = 1
	Location_DGps       Location_Fix = 2
	Location_Pps        Location_Fix = 3
	Location_Rtk        Location_Fix = 4
	Location_FloatRtk   Location_Fix = 5
	Location_Estimated  Location_Fix = 6
	Location_Manual     Location_Fix = 7
	Location_Simulation Location_Fix = 8
)

// Enum value maps for Location_Fix.
var (
	Location_Fix_name = map[int32]string{
		0: "None",
		1: "Gps",
		2: "DGps",
		3: "Pps",
		4: "Rtk",
		5: "FloatRtk",
		6: "Estimated",
		7: "Manual",
		8: "Simulation",
	}
	Location_Fix_value = map[string]int32{
		"None":       0,
		"Gps":        1,
		"DGps":       2,
		"Pps":        3,
		"Rtk":        4,
		"FloatRtk":   5,
		"Estimated":  6,
		"Manual":     7,
		"Simulation": 8,
	}
)

func (x Location_Fix) Enum() *Location_Fix {
	p := new(Location_Fix)
	*p = x
	return p
}

func (x Location_Fix) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Location_Fix) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_sysinfo_v1_proto_enumTypes[3].Descriptor()
}

func (Location_Fix) Type() protoreflect.EnumType {
	return &file_carrier_sysinfo_v1_proto_enumTypes[3]
}

func (x Location_Fix) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Location_Fix.Descriptor instead.
func (Location_Fix) EnumDescriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{21, 0}
}

type Sensor_ValueType int32

const (
	Sensor_None         Sensor_ValueType = 0
	Sensor_MilliCelsius Sensor_ValueType = 1
)

// Enum value maps for Sensor_ValueType.
var (
	Sensor_ValueType_name = map[int32]string{
		0: "None",
		1: "MilliCelsius",
	}
	Sensor_ValueType_value = map[string]int32{
		"None":         0,
		"MilliCelsius": 1,
	}
)

func (x Sensor_ValueType) Enum() *Sensor_ValueType {
	p := new(Sensor_ValueType)
	*p = x
	return p
}

func (x Sensor_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sensor_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_sysinfo_v1_proto_enumTypes[4].Descriptor()
}

func (Sensor_ValueType) Type() protoreflect.EnumType {
	return &file_carrier_sysinfo_v1_proto_enumTypes[4]
}

func (x Sensor_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sensor_ValueType.Descriptor instead.
func (Sensor_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{22, 0}
}

type Uname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sysname  string `protobuf:"bytes,1,opt,name=sysname,proto3" json:"sysname,omitempty"`
	Nodename string `protobuf:"bytes,2,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Release  string `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	Version  string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Machine  string `protobuf:"bytes,5,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Uname) Reset() {
	*x = Uname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uname) ProtoMessage() {}

func (x *Uname) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uname.ProtoReflect.Descriptor instead.
func (*Uname) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Uname) GetSysname() string {
	if x != nil {
		return x.Sysname
	}
	return ""
}

func (x *Uname) GetNodename() string {
	if x != nil {
		return x.Nodename
	}
	return ""
}

func (x *Uname) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Uname) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Uname) GetMachine() string {
	if x != nil {
		return x.Machine
	}
	return ""
}

type Load struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg_1      float64 `protobuf:"fixed64,1,opt,name=avg_1,json=avg1,proto3" json:"avg_1,omitempty"`
	Avg_5      float64 `protobuf:"fixed64,2,opt,name=avg_5,json=avg5,proto3" json:"avg_5,omitempty"`
	Avg_15     float64 `protobuf:"fixed64,3,opt,name=avg_15,json=avg15,proto3" json:"avg_15,omitempty"`
	Clock      uint64  `protobuf:"varint,4,opt,name=clock,proto3" json:"clock,omitempty"`
	Uptime     uint64  `protobuf:"varint,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Idletime   uint64  `protobuf:"varint,6,opt,name=idletime,proto3" json:"idletime,omitempty"`
	ProcActive uint64  `protobuf:"varint,7,opt,name=proc_active,json=procActive,proto3" json:"proc_active,omitempty"`
	ProcTotal  uint64  `protobuf:"varint,8,opt,name=proc_total,json=procTotal,proto3" json:"proc_total,omitempty"`
	Cores      uint32  `protobuf:"varint,9,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads    uint32  `protobuf:"varint,10,opt,name=threads,proto3" json:"threads,omitempty"`
}

func (x *Load) Reset() {
	*x = Load{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Load) ProtoMessage() {}

func (x *Load) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Load.ProtoReflect.Descriptor instead.
func (*Load) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{1}
}

func (x *Load) GetAvg_1() float64 {
	if x != nil {
		return x.Avg_1
	}
	return 0
}

func (x *Load) GetAvg_5() float64 {
	if x != nil {
		return x.Avg_5
	}
	return 0
}

func (x *Load) GetAvg_15() float64 {
	if x != nil {
		return x.Avg_15
	}
	return 0
}

func (x *Load) GetClock() uint64 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *Load) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *Load) GetIdletime() uint64 {
	if x != nil {
		return x.Idletime
	}
	return 0
}

func (x *Load) GetProcActive() uint64 {
	if x != nil {
		return x.ProcActive
	}
	return 0
}

func (x *Load) GetProcTotal() uint64 {
	if x != nil {
		return x.ProcTotal
	}
	return 0
}

func (x *Load) GetCores() uint32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *Load) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

type Mem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Free      uint64 `protobuf:"varint,2,opt,name=free,proto3" json:"free,omitempty"`
	Available uint64 `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *Mem) Reset() {
	*x = Mem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mem) ProtoMessage() {}

func (x *Mem) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mem.ProtoReflect.Descriptor instead.
func (*Mem) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Mem) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Mem) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *Mem) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

type FileSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Blocksize uint64 `protobuf:"varint,2,opt,name=blocksize,proto3" json:"blocksize,omitempty"`
	Total     uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Free      uint64 `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
}

func (x *FileSystem) Reset() {
	*x = FileSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystem) ProtoMessage() {}

func (x *FileSystem) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystem.ProtoReflect.Descriptor instead.
func (*FileSystem) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{3}
}

func (x *FileSystem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileSystem) GetBlocksize() uint64 {
	if x != nil {
		return x.Blocksize
	}
	return 0
}

func (x *FileSystem) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FileSystem) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

type Firmware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board           string `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Distro          string `protobuf:"bytes,2,opt,name=distro,proto3" json:"distro,omitempty"`
	Release         string `protobuf:"bytes,3,opt,name=release,proto3" json:"release,omitempty"`
	Revision        string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	Builder         string `protobuf:"bytes,5,opt,name=builder,proto3" json:"builder,omitempty"`
	Finger          string `protobuf:"bytes,6,opt,name=finger,proto3" json:"finger,omitempty"`
	AndroidApiLevel uint32 `protobuf:"varint,7,opt,name=android_api_level,json=androidApiLevel,proto3" json:"android_api_level,omitempty"`
}

func (x *Firmware) Reset() {
	*x = Firmware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Firmware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Firmware) ProtoMessage() {}

func (x *Firmware) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Firmware.ProtoReflect.Descriptor instead.
func (*Firmware) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{4}
}

func (x *Firmware) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *Firmware) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *Firmware) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Firmware) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Firmware) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *Firmware) GetFinger() string {
	if x != nil {
		return x.Finger
	}
	return ""
}

func (x *Firmware) GetAndroidApiLevel() uint32 {
	if x != nil {
		return x.AndroidApiLevel
	}
	return 0
}

type NetAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Mask      string `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	Broadcast string `protobuf:"bytes,3,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
}

func (x *NetAddress) Reset() {
	*x = NetAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetAddress) ProtoMessage() {}

func (x *NetAddress) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetAddress.ProtoReflect.Descriptor instead.
func (*NetAddress) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{5}
}

func (x *NetAddress) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *NetAddress) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

func (x *NetAddress) GetBroadcast() string {
	if x != nil {
		return x.Broadcast
	}
	return ""
}

type Netdev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RxPkt       uint64        `protobuf:"varint,2,opt,name=rx_pkt,json=rxPkt,proto3" json:"rx_pkt,omitempty"`
	RxErr       uint64        `protobuf:"varint,3,opt,name=rx_err,json=rxErr,proto3" json:"rx_err,omitempty"`
	TxPkt       uint64        `protobuf:"varint,4,opt,name=tx_pkt,json=txPkt,proto3" json:"tx_pkt,omitempty"`
	TxErr       uint64        `protobuf:"varint,5,opt,name=tx_err,json=txErr,proto3" json:"tx_err,omitempty"`
	Up          bool          `protobuf:"varint,6,opt,name=up,proto3" json:"up,omitempty"`
	Macaddr     string        `protobuf:"bytes,7,opt,name=macaddr,proto3" json:"macaddr,omitempty"`
	Mtu         uint32        `protobuf:"varint,8,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Addrs       []*NetAddress `protobuf:"bytes,9,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Link        bool          `protobuf:"varint,10,opt,name=link,proto3" json:"link,omitempty"`
	LinkChanges uint64        `protobuf:"varint,11,opt,name=link_changes,json=linkChanges,proto3" json:"link_changes,omitempty"`
	LinkSpeed   uint64        `protobuf:"varint,12,opt,name=link_speed,json=linkSpeed,proto3" json:"link_speed,omitempty"`
	LinkDuplex  Netdev_Duplex `protobuf:"varint,13,opt,name=link_duplex,json=linkDuplex,proto3,enum=carrier.sysinfo.v1.Netdev_Duplex" json:"link_duplex,omitempty"`
}

func (x *Netdev) Reset() {
	*x = Netdev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Netdev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Netdev) ProtoMessage() {}

func (x *Netdev) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Netdev.ProtoReflect.Descriptor instead.
func (*Netdev) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{6}
}

func (x *Netdev) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Netdev) GetRxPkt() uint64 {
	if x != nil {
		return x.RxPkt
	}
	return 0
}

func (x *Netdev) GetRxErr() uint64 {
	if x != nil {
		return x.RxErr
	}
	return 0
}

func (x *Netdev) GetTxPkt() uint64 {
	if x != nil {
		return x.TxPkt
	}
	return 0
}

func (x *Netdev) GetTxErr() uint64 {
	if x != nil {
		return x.TxErr
	}
	return 0
}

func (x *Netdev) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

func (x *Netdev) GetMacaddr() string {
	if x != nil {
		return x.Macaddr
	}
	return ""
}

func (x *Netdev) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Netdev) GetAddrs() []*NetAddress {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *Netdev) GetLink() bool {
	if x != nil {
		return x.Link
	}
	return false
}

func (x *Netdev) GetLinkChanges() uint64 {
	if x != nil {
		return x.LinkChanges
	}
	return 0
}

func (x *Netdev) GetLinkSpeed() uint64 {
	if x != nil {
		return x.LinkSpeed
	}
	return 0
}

func (x *Netdev) GetLinkDuplex() Netdev_Duplex {
	if x != nil {
		return x.LinkDuplex
	}
	return Netdev_Invalid
}

type SwitchPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port  uint64 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Link  bool   `protobuf:"varint,2,opt,name=link,proto3" json:"link,omitempty"`
	Speed string `protobuf:"bytes,3,opt,name=speed,proto3" json:"speed,omitempty"`
	// Types that are assignable to Role:
	//	*SwitchPort_Network
	//	*SwitchPort_Device
	//	*SwitchPort_None
	Role isSwitchPort_Role `protobuf_oneof:"role"`
}

func (x *SwitchPort) Reset() {
	*x = SwitchPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchPort) ProtoMessage() {}

func (x *SwitchPort) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchPort.ProtoReflect.Descriptor instead.
func (*SwitchPort) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{7}
}

func (x *SwitchPort) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SwitchPort) GetLink() bool {
	if x != nil {
		return x.Link
	}
	return false
}

func (x *SwitchPort) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

func (m *SwitchPort) GetRole() isSwitchPort_Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (x *SwitchPort) GetNetwork() string {
	if x, ok := x.GetRole().(*SwitchPort_Network); ok {
		return x.Network
	}
	return ""
}

func (x *SwitchPort) GetDevice() string {
	if x, ok := x.GetRole().(*SwitchPort_Device); ok {
		return x.Device
	}
	return ""
}

func (x *SwitchPort) GetNone() bool {
	if x, ok := x.GetRole().(*SwitchPort_None); ok {
		return x.None
	}
	return false
}

type isSwitchPort_Role interface {
	isSwitchPort_Role()
}

type SwitchPort_Network struct {
	Network string `protobuf:"bytes,4,opt,name=network,proto3,oneof"`
}

type SwitchPort_Device struct {
	Device string `protobuf:"bytes,5,opt,name=device,proto3,oneof"`
}

type SwitchPort_None struct {
	None bool `protobuf:"varint,6,opt,name=none,proto3,oneof"`
}

func (*SwitchPort_Network) isSwitchPort_Role() {}

func (*SwitchPort_Device) isSwitchPort_Role() {}

func (*SwitchPort_None) isSwitchPort_Role() {}

type Switch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ports []*SwitchPort `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *Switch) Reset() {
	*x = Switch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Switch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Switch) ProtoMessage() {}

func (x *Switch) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Switch.ProtoReflect.Descriptor instead.
func (*Switch) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{8}
}

func (x *Switch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Switch) GetPorts() []*SwitchPort {
	if x != nil {
		return x.Ports
	}
	return nil
}

type Bootloader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveSide string `protobuf:"bytes,1,opt,name=active_side,json=activeSide,proto3" json:"active_side,omitempty"`
	BootReason string `protobuf:"bytes,2,opt,name=boot_reason,json=bootReason,proto3" json:"boot_reason,omitempty"`
}

func (x *Bootloader) Reset() {
	*x = Bootloader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootloader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootloader) ProtoMessage() {}

func (x *Bootloader) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootloader.ProtoReflect.Descriptor instead.
func (*Bootloader) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{9}
}

func (x *Bootloader) GetActiveSide() string {
	if x != nil {
		return x.ActiveSide
	}
	return ""
}

func (x *Bootloader) GetBootReason() string {
	if x != nil {
		return x.BootReason
	}
	return ""
}

type Belltower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  string `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Previous string `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"`
}

func (x *Belltower) Reset() {
	*x = Belltower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Belltower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Belltower) ProtoMessage() {}

func (x *Belltower) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Belltower.ProtoReflect.Descriptor instead.
func (*Belltower) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{10}
}

func (x *Belltower) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *Belltower) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

type Sysinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uname          *Uname        `protobuf:"bytes,1,opt,name=uname,proto3" json:"uname,omitempty"`
	Mem            *Mem          `protobuf:"bytes,2,opt,name=mem,proto3" json:"mem,omitempty"`
	Load           *Load         `protobuf:"bytes,3,opt,name=load,proto3" json:"load,omitempty"`
	Firmware       *Firmware     `protobuf:"bytes,4,opt,name=firmware,proto3" json:"firmware,omitempty"`
	Fs             []*FileSystem `protobuf:"bytes,5,rep,name=fs,proto3" json:"fs,omitempty"`
	Net            []*Netdev     `protobuf:"bytes,6,rep,name=net,proto3" json:"net,omitempty"`
	Switch         []*Switch     `protobuf:"bytes,7,rep,name=switch,proto3" json:"switch,omitempty"`
	BoardId        string        `protobuf:"bytes,8,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	CarrierBuildId string        `protobuf:"bytes,9,opt,name=carrier_build_id,json=carrierBuildId,proto3" json:"carrier_build_id,omitempty"`
	Belltower      *Belltower    `protobuf:"bytes,10,opt,name=belltower,proto3" json:"belltower,omitempty"`
	Bootloader     *Bootloader   `protobuf:"bytes,11,opt,name=bootloader,proto3" json:"bootloader,omitempty"`
}

func (x *Sysinfo) Reset() {
	*x = Sysinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sysinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sysinfo) ProtoMessage() {}

func (x *Sysinfo) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sysinfo.ProtoReflect.Descriptor instead.
func (*Sysinfo) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{11}
}

func (x *Sysinfo) GetUname() *Uname {
	if x != nil {
		return x.Uname
	}
	return nil
}

func (x *Sysinfo) GetMem() *Mem {
	if x != nil {
		return x.Mem
	}
	return nil
}

func (x *Sysinfo) GetLoad() *Load {
	if x != nil {
		return x.Load
	}
	return nil
}

func (x *Sysinfo) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

func (x *Sysinfo) GetFs() []*FileSystem {
	if x != nil {
		return x.Fs
	}
	return nil
}

func (x *Sysinfo) GetNet() []*Netdev {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *Sysinfo) GetSwitch() []*Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

func (x *Sysinfo) GetBoardId() string {
	if x != nil {
		return x.BoardId
	}
	return ""
}

func (x *Sysinfo) GetCarrierBuildId() string {
	if x != nil {
		return x.CarrierBuildId
	}
	return ""
}

func (x *Sysinfo) GetBelltower() *Belltower {
	if x != nil {
		return x.Belltower
	}
	return nil
}

func (x *Sysinfo) GetBootloader() *Bootloader {
	if x != nil {
		return x.Bootloader
	}
	return nil
}

type WifiStation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Inactive        uint64  `protobuf:"varint,2,opt,name=inactive,proto3" json:"inactive,omitempty"`
	RxBytes         uint64  `protobuf:"varint,3,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	RxPackets       uint64  `protobuf:"varint,4,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	TxBytes         uint64  `protobuf:"varint,5,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	TxPackets       uint64  `protobuf:"varint,6,opt,name=tx_packets,json=txPackets,proto3" json:"tx_packets,omitempty"`
	TxRetries       uint64  `protobuf:"varint,7,opt,name=tx_retries,json=txRetries,proto3" json:"tx_retries,omitempty"`
	TxFailed        uint64  `protobuf:"varint,8,opt,name=tx_failed,json=txFailed,proto3" json:"tx_failed,omitempty"`
	BeaconLoss      uint64  `protobuf:"varint,9,opt,name=beacon_loss,json=beaconLoss,proto3" json:"beacon_loss,omitempty"`
	BeaconRx        uint64  `protobuf:"varint,10,opt,name=beacon_rx,json=beaconRx,proto3" json:"beacon_rx,omitempty"`
	RxDropMisc      uint64  `protobuf:"varint,11,opt,name=rx_drop_misc,json=rxDropMisc,proto3" json:"rx_drop_misc,omitempty"`
	Signal          []int32 `protobuf:"varint,12,rep,packed,name=signal,proto3" json:"signal,omitempty"`
	SignalAvg       []int32 `protobuf:"varint,13,rep,packed,name=signal_avg,json=signalAvg,proto3" json:"signal_avg,omitempty"`
	BeaconSignalAvg uint64  `protobuf:"varint,14,opt,name=beacon_signal_avg,json=beaconSignalAvg,proto3" json:"beacon_signal_avg,omitempty"`
	TxBitrate       float64 `protobuf:"fixed64,15,opt,name=tx_bitrate,json=txBitrate,proto3" json:"tx_bitrate,omitempty"`
	RxBitrate       float64 `protobuf:"fixed64,16,opt,name=rx_bitrate,json=rxBitrate,proto3" json:"rx_bitrate,omitempty"`
	RxDuration      uint64  `protobuf:"varint,17,opt,name=rx_duration,json=rxDuration,proto3" json:"rx_duration,omitempty"`
	Expected        float64 `protobuf:"fixed64,18,opt,name=expected,proto3" json:"expected,omitempty"`
	Authorized      bool    `protobuf:"varint,19,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Authenticated   bool    `protobuf:"varint,20,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	Associated      bool    `protobuf:"varint,21,opt,name=associated,proto3" json:"associated,omitempty"`
	Preamble        string  `protobuf:"bytes,22,opt,name=preamble,proto3" json:"preamble,omitempty"`
	Wmm             bool    `protobuf:"varint,23,opt,name=wmm,proto3" json:"wmm,omitempty"`
	MFP             bool    `protobuf:"varint,24,opt,name=MFP,proto3" json:"MFP,omitempty"`
	TDLS            bool    `protobuf:"varint,25,opt,name=TDLS,proto3" json:"TDLS,omitempty"`
	DTIM            uint32  `protobuf:"varint,26,opt,name=DTIM,proto3" json:"DTIM,omitempty"`
	BeaconInterval  uint64  `protobuf:"varint,27,opt,name=beacon_interval,json=beaconInterval,proto3" json:"beacon_interval,omitempty"`
	ShortPreamble   bool    `protobuf:"varint,28,opt,name=short_preamble,json=shortPreamble,proto3" json:"short_preamble,omitempty"`
	ShortSlotTime   bool    `protobuf:"varint,29,opt,name=short_slot_time,json=shortSlotTime,proto3" json:"short_slot_time,omitempty"`
	ConnectedTime   uint64  `protobuf:"varint,30,opt,name=connected_time,json=connectedTime,proto3" json:"connected_time,omitempty"`
}

func (x *WifiStation) Reset() {
	*x = WifiStation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiStation) ProtoMessage() {}

func (x *WifiStation) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiStation.ProtoReflect.Descriptor instead.
func (*WifiStation) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{12}
}

func (x *WifiStation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WifiStation) GetInactive() uint64 {
	if x != nil {
		return x.Inactive
	}
	return 0
}

func (x *WifiStation) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *WifiStation) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *WifiStation) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *WifiStation) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *WifiStation) GetTxRetries() uint64 {
	if x != nil {
		return x.TxRetries
	}
	return 0
}

func (x *WifiStation) GetTxFailed() uint64 {
	if x != nil {
		return x.TxFailed
	}
	return 0
}

func (x *WifiStation) GetBeaconLoss() uint64 {
	if x != nil {
		return x.BeaconLoss
	}
	return 0
}

func (x *WifiStation) GetBeaconRx() uint64 {
	if x != nil {
		return x.BeaconRx
	}
	return 0
}

func (x *WifiStation) GetRxDropMisc() uint64 {
	if x != nil {
		return x.RxDropMisc
	}
	return 0
}

func (x *WifiStation) GetSignal() []int32 {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *WifiStation) GetSignalAvg() []int32 {
	if x != nil {
		return x.SignalAvg
	}
	return nil
}

func (x *WifiStation) GetBeaconSignalAvg() uint64 {
	if x != nil {
		return x.BeaconSignalAvg
	}
	return 0
}

func (x *WifiStation) GetTxBitrate() float64 {
	if x != nil {
		return x.TxBitrate
	}
	return 0
}

func (x *WifiStation) GetRxBitrate() float64 {
	if x != nil {
		return x.RxBitrate
	}
	return 0
}

func (x *WifiStation) GetRxDuration() uint64 {
	if x != nil {
		return x.RxDuration
	}
	return 0
}

func (x *WifiStation) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *WifiStation) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *WifiStation) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

func (x *WifiStation) GetAssociated() bool {
	if x != nil {
		return x.Associated
	}
	return false
}

func (x *WifiStation) GetPreamble() string {
	if x != nil {
		return x.Preamble
	}
	return ""
}

func (x *WifiStation) GetWmm() bool {
	if x != nil {
		return x.Wmm
	}
	return false
}

func (x *WifiStation) GetMFP() bool {
	if x != nil {
		return x.MFP
	}
	return false
}

func (x *WifiStation) GetTDLS() bool {
	if x != nil {
		return x.TDLS
	}
	return false
}

func (x *WifiStation) GetDTIM() uint32 {
	if x != nil {
		return x.DTIM
	}
	return 0
}

func (x *WifiStation) GetBeaconInterval() uint64 {
	if x != nil {
		return x.BeaconInterval
	}
	return 0
}

func (x *WifiStation) GetShortPreamble() bool {
	if x != nil {
		return x.ShortPreamble
	}
	return false
}

func (x *WifiStation) GetShortSlotTime() bool {
	if x != nil {
		return x.ShortSlotTime
	}
	return false
}

func (x *WifiStation) GetConnectedTime() uint64 {
	if x != nil {
		return x.ConnectedTime
	}
	return 0
}

type WifiInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Typ      string         `protobuf:"bytes,2,opt,name=typ,proto3" json:"typ,omitempty"`
	Phy      uint64         `protobuf:"varint,3,opt,name=phy,proto3" json:"phy,omitempty"`
	Ssid     string         `protobuf:"bytes,4,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Channel  string         `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Txpower  float64        `protobuf:"fixed64,6,opt,name=txpower,proto3" json:"txpower,omitempty"`
	Stations []*WifiStation `protobuf:"bytes,7,rep,name=stations,proto3" json:"stations,omitempty"`
}

func (x *WifiInterface) Reset() {
	*x = WifiInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiInterface) ProtoMessage() {}

func (x *WifiInterface) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiInterface.ProtoReflect.Descriptor instead.
func (*WifiInterface) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{13}
}

func (x *WifiInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiInterface) GetTyp() string {
	if x != nil {
		return x.Typ
	}
	return ""
}

func (x *WifiInterface) GetPhy() uint64 {
	if x != nil {
		return x.Phy
	}
	return 0
}

func (x *WifiInterface) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiInterface) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *WifiInterface) GetTxpower() float64 {
	if x != nil {
		return x.Txpower
	}
	return 0
}

func (x *WifiInterface) GetStations() []*WifiStation {
	if x != nil {
		return x.Stations
	}
	return nil
}

type DhcpLease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts   uint64 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Mac  string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Ip   string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DhcpLease) Reset() {
	*x = DhcpLease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DhcpLease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DhcpLease) ProtoMessage() {}

func (x *DhcpLease) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DhcpLease.ProtoReflect.Descriptor instead.
func (*DhcpLease) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{14}
}

func (x *DhcpLease) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *DhcpLease) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *DhcpLease) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DhcpLease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Arp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip  string     `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Hw  Arp_HwType `protobuf:"varint,2,opt,name=hw,proto3,enum=carrier.sysinfo.v1.Arp_HwType" json:"hw,omitempty"`
	Mac string     `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Dev string     `protobuf:"bytes,4,opt,name=dev,proto3" json:"dev,omitempty"`
	// Types that are assignable to Switchport:
	//	*Arp_Value
	//	*Arp_Null
	Switchport isArp_Switchport `protobuf_oneof:"switchport"`
}

func (x *Arp) Reset() {
	*x = Arp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arp) ProtoMessage() {}

func (x *Arp) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arp.ProtoReflect.Descriptor instead.
func (*Arp) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{15}
}

func (x *Arp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Arp) GetHw() Arp_HwType {
	if x != nil {
		return x.Hw
	}
	return Arp_Unknown
}

func (x *Arp) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Arp) GetDev() string {
	if x != nil {
		return x.Dev
	}
	return ""
}

func (m *Arp) GetSwitchport() isArp_Switchport {
	if m != nil {
		return m.Switchport
	}
	return nil
}

func (x *Arp) GetValue() uint64 {
	if x, ok := x.GetSwitchport().(*Arp_Value); ok {
		return x.Value
	}
	return 0
}

func (x *Arp) GetNull() bool {
	if x, ok := x.GetSwitchport().(*Arp_Null); ok {
		return x.Null
	}
	return false
}

type isArp_Switchport interface {
	isArp_Switchport()
}

type Arp_Value struct {
	Value uint64 `protobuf:"varint,5,opt,name=value,proto3,oneof"`
}

type Arp_Null struct {
	Null bool `protobuf:"varint,6,opt,name=null,proto3,oneof"`
}

func (*Arp_Value) isArp_Switchport() {}

func (*Arp_Null) isArp_Switchport() {}

type NetRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Gateway     string `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Source      string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *NetRoute) Reset() {
	*x = NetRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetRoute) ProtoMessage() {}

func (x *NetRoute) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetRoute.ProtoReflect.Descriptor instead.
func (*NetRoute) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{16}
}

func (x *NetRoute) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *NetRoute) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetRoute) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type NetSurvey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wifi   []*WifiInterface `protobuf:"bytes,1,rep,name=wifi,proto3" json:"wifi,omitempty"`
	Dhcp   []*DhcpLease     `protobuf:"bytes,2,rep,name=dhcp,proto3" json:"dhcp,omitempty"`
	Arp    []*Arp           `protobuf:"bytes,3,rep,name=arp,proto3" json:"arp,omitempty"`
	Routes []*NetRoute      `protobuf:"bytes,4,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *NetSurvey) Reset() {
	*x = NetSurvey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetSurvey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetSurvey) ProtoMessage() {}

func (x *NetSurvey) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetSurvey.ProtoReflect.Descriptor instead.
func (*NetSurvey) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{17}
}

func (x *NetSurvey) GetWifi() []*WifiInterface {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *NetSurvey) GetDhcp() []*DhcpLease {
	if x != nil {
		return x.Dhcp
	}
	return nil
}

func (x *NetSurvey) GetArp() []*Arp {
	if x != nil {
		return x.Arp
	}
	return nil
}

func (x *NetSurvey) GetRoutes() []*NetRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type LocationAccuracity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hdop float32 `protobuf:"fixed32,1,opt,name=hdop,proto3" json:"hdop,omitempty"`
	Vdop float32 `protobuf:"fixed32,2,opt,name=vdop,proto3" json:"vdop,omitempty"`
	Pdop float32 `protobuf:"fixed32,3,opt,name=pdop,proto3" json:"pdop,omitempty"`
}

func (x *LocationAccuracity) Reset() {
	*x = LocationAccuracity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationAccuracity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationAccuracity) ProtoMessage() {}

func (x *LocationAccuracity) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationAccuracity.ProtoReflect.Descriptor instead.
func (*LocationAccuracity) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{18}
}

func (x *LocationAccuracity) GetHdop() float32 {
	if x != nil {
		return x.Hdop
	}
	return 0
}

func (x *LocationAccuracity) GetVdop() float32 {
	if x != nil {
		return x.Vdop
	}
	return 0
}

func (x *LocationAccuracity) GetPdop() float32 {
	if x != nil {
		return x.Pdop
	}
	return 0
}

type Satellite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constellation Satellite_Constellation `protobuf:"varint,1,opt,name=constellation,proto3,enum=carrier.sysinfo.v1.Satellite_Constellation" json:"constellation,omitempty"`
	Prn           uint32                  `protobuf:"varint,2,opt,name=prn,proto3" json:"prn,omitempty"`
	Elevation     float32                 `protobuf:"fixed32,3,opt,name=elevation,proto3" json:"elevation,omitempty"`
	Azimuth       float32                 `protobuf:"fixed32,4,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Snr           float32                 `protobuf:"fixed32,5,opt,name=snr,proto3" json:"snr,omitempty"`
	Fix           bool                    `protobuf:"varint,6,opt,name=fix,proto3" json:"fix,omitempty"`
}

func (x *Satellite) Reset() {
	*x = Satellite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Satellite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Satellite) ProtoMessage() {}

func (x *Satellite) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Satellite.ProtoReflect.Descriptor instead.
func (*Satellite) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{19}
}

func (x *Satellite) GetConstellation() Satellite_Constellation {
	if x != nil {
		return x.Constellation
	}
	return Satellite_Unknown
}

func (x *Satellite) GetPrn() uint32 {
	if x != nil {
		return x.Prn
	}
	return 0
}

func (x *Satellite) GetElevation() float32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *Satellite) GetAzimuth() float32 {
	if x != nil {
		return x.Azimuth
	}
	return 0
}

func (x *Satellite) GetSnr() float32 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *Satellite) GetFix() bool {
	if x != nil {
		return x.Fix
	}
	return false
}

type LocationVelocity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course float32 `protobuf:"fixed32,1,opt,name=course,proto3" json:"course,omitempty"`
	Speed  float32 `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *LocationVelocity) Reset() {
	*x = LocationVelocity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationVelocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationVelocity) ProtoMessage() {}

func (x *LocationVelocity) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationVelocity.ProtoReflect.Descriptor instead.
func (*LocationVelocity) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{20}
}

func (x *LocationVelocity) GetCourse() float32 {
	if x != nil {
		return x.Course
	}
	return 0
}

func (x *LocationVelocity) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude   float64             `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude  float64             `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude   float32             `protobuf:"fixed32,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Fix        Location_Fix        `protobuf:"varint,4,opt,name=fix,proto3,enum=carrier.sysinfo.v1.Location_Fix" json:"fix,omitempty"`
	Accuracity *LocationAccuracity `protobuf:"bytes,5,opt,name=accuracity,proto3" json:"accuracity,omitempty"`
	Satellites []*Satellite        `protobuf:"bytes,6,rep,name=satellites,proto3" json:"satellites,omitempty"`
	Velocity   *LocationVelocity   `protobuf:"bytes,7,opt,name=velocity,proto3" json:"velocity,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{21}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *Location) GetFix() Location_Fix {
	if x != nil {
		return x.Fix
	}
	return Location_None
}

func (x *Location) GetAccuracity() *LocationAccuracity {
	if x != nil {
		return x.Accuracity
	}
	return nil
}

func (x *Location) GetSatellites() []*Satellite {
	if x != nil {
		return x.Satellites
	}
	return nil
}

func (x *Location) GetVelocity() *LocationVelocity {
	if x != nil {
		return x.Velocity
	}
	return nil
}

type Sensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vtype Sensor_ValueType `protobuf:"varint,2,opt,name=vtype,proto3,enum=carrier.sysinfo.v1.Sensor_ValueType" json:"vtype,omitempty"`
	Value uint64           `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{22}
}

func (x *Sensor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sensor) GetVtype() Sensor_ValueType {
	if x != nil {
		return x.Vtype
	}
	return Sensor_None
}

func (x *Sensor) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Sensors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sensors []*Sensor `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
}

func (x *Sensors) Reset() {
	*x = Sensors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sensors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensors) ProtoMessage() {}

func (x *Sensors) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensors.ProtoReflect.Descriptor instead.
func (*Sensors) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{23}
}

func (x *Sensors) GetSensors() []*Sensor {
	if x != nil {
		return x.Sensors
	}
	return nil
}

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_sysinfo_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_sysinfo_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_carrier_sysinfo_v1_proto_rawDescGZIP(), []int{24}
}

var File_carrier_sysinfo_v1_proto protoreflect.FileDescriptor

var file_carrier_sysinfo_v1_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x22, 0x8b,
	0x01, 0x0a, 0x05, 0x55, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x81, 0x02, 0x0a,
	0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x76, 0x67, 0x5f, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x76, 0x67, 0x31, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x76,
	0x67, 0x5f, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x76, 0x67, 0x35, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x5f, 0x31, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x61, 0x76, 0x67, 0x31, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x22, 0x4d, 0x0a, 0x03, 0x4d, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x68, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x08, 0x46, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x41, 0x70, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x52, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0xaf, 0x03, 0x0a,
	0x06, 0x4e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x78, 0x5f, 0x70, 0x6b, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x78, 0x50,
	0x6b, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x72, 0x78, 0x45, 0x72, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f,
	0x70, 0x6b, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x78, 0x50, 0x6b, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x78, 0x45, 0x72, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x74, 0x75, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x42, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73,
	0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x64, 0x65, 0x76,
	0x2e, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x75, 0x70,
	0x6c, 0x65, 0x78, 0x22, 0x29, 0x0a, 0x06, 0x44, 0x75, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x61,
	0x6c, 0x66, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x02, 0x22, 0x9e,
	0x01, 0x0a, 0x0a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x52, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x09, 0x42, 0x65, 0x6c, 0x6c, 0x74, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22, 0xa1, 0x04, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x75, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x12, 0x2c,
	0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x08,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x02, 0x66, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79,
	0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x64, 0x65, 0x76, 0x52,
	0x03, 0x6e, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73,
	0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x09, 0x62, 0x65, 0x6c, 0x6c, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x6c, 0x6c, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x09, 0x62, 0x65, 0x6c, 0x6c, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x6f,
	0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0a,
	0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x22, 0x9e, 0x07, 0x0a, 0x0b, 0x57,
	0x69, 0x66, 0x69, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x72, 0x78, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x78, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x4c, 0x6f, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x72, 0x78, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x52, 0x78, 0x12, 0x20,
	0x0a, 0x0c, 0x72, 0x78, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6d, 0x69, 0x73, 0x63, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x78, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x69, 0x73, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x76, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x41, 0x76, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x78, 0x42, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x78, 0x5f, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x78, 0x42, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x77, 0x6d, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x77,
	0x6d, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x46, 0x50, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x4d, 0x46, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x44, 0x4c, 0x53, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x54, 0x44, 0x4c, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x54, 0x49, 0x4d,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x44, 0x54, 0x49, 0x4d, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0d,
	0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x79, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x70, 0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x78, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x09, 0x44, 0x68,
	0x63, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xca, 0x01,
	0x0a, 0x03, 0x41, 0x72, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2e, 0x0a, 0x02, 0x68, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x70, 0x2e, 0x48, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x02, 0x68, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x76, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x22, 0x23, 0x0a, 0x06, 0x48, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x10, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5e, 0x0a, 0x08, 0x4e, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x09, 0x4e,
	0x65, 0x74, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x68, 0x63, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x68, 0x63, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x68,
	0x63, 0x70, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x72, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x70, 0x52, 0x03, 0x61, 0x72, 0x70, 0x12, 0x34, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x64, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x64, 0x6f, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x64, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x76, 0x64, 0x6f,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x64, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x70, 0x64, 0x6f, 0x70, 0x22, 0x8d, 0x02, 0x0a, 0x09, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x6e, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73,
	0x6e, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x66, 0x69, 0x78, 0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x61, 0x6c, 0x69, 0x6c, 0x65, 0x6f, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x70, 0x73, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x6c, 0x6f, 0x6e,
	0x61, 0x73, 0x73, 0x10, 0x03, 0x22, 0x40, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0xcc, 0x03, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x66, 0x69,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x78, 0x52, 0x03, 0x66, 0x69, 0x78, 0x12, 0x46,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x75,
	0x72, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x52, 0x0a, 0x73, 0x61, 0x74, 0x65, 0x6c,
	0x6c, 0x69, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x22, 0x6d, 0x0a, 0x03, 0x46, 0x69, 0x78, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x70, 0x73, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x47, 0x70, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x70, 0x73, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x74, 0x6b, 0x10, 0x04, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x74, 0x6b, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x08, 0x22, 0x97, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73,
	0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x43, 0x65, 0x6c, 0x73, 0x69, 0x75, 0x73, 0x10, 0x01,
	0x22, 0x3f, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x73,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x73, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x32, 0xda, 0x01, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07,
	0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x6e,
	0x65, 0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x44,
	0x0a, 0x09, 0x6e, 0x65, 0x74, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x63, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e,
	0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x53, 0x75,
	0x72, 0x76, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12,
	0x18, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carrier_sysinfo_v1_proto_rawDescOnce sync.Once
	file_carrier_sysinfo_v1_proto_rawDescData = file_carrier_sysinfo_v1_proto_rawDesc
)

func file_carrier_sysinfo_v1_proto_rawDescGZIP() []byte {
	file_carrier_sysinfo_v1_proto_rawDescOnce.Do(func() {
		file_carrier_sysinfo_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_carrier_sysinfo_v1_proto_rawDescData)
	})
	return file_carrier_sysinfo_v1_proto_rawDescData
}

var file_carrier_sysinfo_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_carrier_sysinfo_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_carrier_sysinfo_v1_proto_goTypes = []interface{}{
	(Netdev_Duplex)(0),           // 0: carrier.sysinfo.v1.Netdev.Duplex
	(Arp_HwType)(0),              // 1: carrier.sysinfo.v1.Arp.HwType
	(Satellite_Constellation)(0), // 2: carrier.sysinfo.v1.Satellite.Constellation
	(Location_Fix)(0),            // 3: carrier.sysinfo.v1.Location.Fix
	(Sensor_ValueType)(0),        // 4: carrier.sysinfo.v1.Sensor.ValueType
	(*Uname)(nil),                // 5: carrier.sysinfo.v1.Uname
	(*Load)(nil),                 // 6: carrier.sysinfo.v1.Load
	(*Mem)(nil),                  // 7: carrier.sysinfo.v1.Mem
	(*FileSystem)(nil),           // 8: carrier.sysinfo.v1.FileSystem
	(*Firmware)(nil),             // 9: carrier.sysinfo.v1.Firmware
	(*NetAddress)(nil),           // 10: carrier.sysinfo.v1.NetAddress
	(*Netdev)(nil),               // 11: carrier.sysinfo.v1.Netdev
	(*SwitchPort)(nil),           // 12: carrier.sysinfo.v1.SwitchPort
	(*Switch)(nil),               // 13: carrier.sysinfo.v1.Switch
	(*Bootloader)(nil),           // 14: carrier.sysinfo.v1.Bootloader
	(*Belltower)(nil),            // 15: carrier.sysinfo.v1.Belltower
	(*Sysinfo)(nil),              // 16: carrier.sysinfo.v1.Sysinfo
	(*WifiStation)(nil),          // 17: carrier.sysinfo.v1.WifiStation
	(*WifiInterface)(nil),        // 18: carrier.sysinfo.v1.WifiInterface
	(*DhcpLease)(nil),            // 19: carrier.sysinfo.v1.DhcpLease
	(*Arp)(nil),                  // 20: carrier.sysinfo.v1.Arp
	(*NetRoute)(nil),             // 21: carrier.sysinfo.v1.NetRoute
	(*NetSurvey)(nil),            // 22: carrier.sysinfo.v1.NetSurvey
	(*LocationAccuracity)(nil),   // 23: carrier.sysinfo.v1.LocationAccuracity
	(*Satellite)(nil),            // 24: carrier.sysinfo.v1.Satellite
	(*LocationVelocity)(nil),     // 25: carrier.sysinfo.v1.LocationVelocity
	(*Location)(nil),             // 26: carrier.sysinfo.v1.Location
	(*Sensor)(nil),               // 27: carrier.sysinfo.v1.Sensor
	(*Sensors)(nil),              // 28: carrier.sysinfo.v1.Sensors
	(*None)(nil),                 // 29: carrier.sysinfo.v1.None
}
var file_carrier_sysinfo_v1_proto_depIdxs = []int32{
	10, // 0: carrier.sysinfo.v1.Netdev.addrs:type_name -> carrier.sysinfo.v1.NetAddress
	0,  // 1: carrier.sysinfo.v1.Netdev.link_duplex:type_name -> carrier.sysinfo.v1.Netdev.Duplex
	12, // 2: carrier.sysinfo.v1.Switch.ports:type_name -> carrier.sysinfo.v1.SwitchPort
	5,  // 3: carrier.sysinfo.v1.Sysinfo.uname:type_name -> carrier.sysinfo.v1.Uname
	7,  // 4: carrier.sysinfo.v1.Sysinfo.mem:type_name -> carrier.sysinfo.v1.Mem
	6,  // 5: carrier.sysinfo.v1.Sysinfo.load:type_name -> carrier.sysinfo.v1.Load
	9,  // 6: carrier.sysinfo.v1.Sysinfo.firmware:type_name -> carrier.sysinfo.v1.Firmware
	8,  // 7: carrier.sysinfo.v1.Sysinfo.fs:type_name -> carrier.sysinfo.v1.FileSystem
	11, // 8: carrier.sysinfo.v1.Sysinfo.net:type_name -> carrier.sysinfo.v1.Netdev
	13, // 9: carrier.sysinfo.v1.Sysinfo.switch:type_name -> carrier.sysinfo.v1.Switch
	15, // 10: carrier.sysinfo.v1.Sysinfo.belltower:type_name -> carrier.sysinfo.v1.Belltower
	14, // 11: carrier.sysinfo.v1.Sysinfo.bootloader:type_name -> carrier.sysinfo.v1.Bootloader
	17, // 12: carrier.sysinfo.v1.WifiInterface.stations:type_name -> carrier.sysinfo.v1.WifiStation
	1,  // 13: carrier.sysinfo.v1.Arp.hw:type_name -> carrier.sysinfo.v1.Arp.HwType
	18, // 14: carrier.sysinfo.v1.NetSurvey.wifi:type_name -> carrier.sysinfo.v1.WifiInterface
	19, // 15: carrier.sysinfo.v1.NetSurvey.dhcp:type_name -> carrier.sysinfo.v1.DhcpLease
	20, // 16: carrier.sysinfo.v1.NetSurvey.arp:type_name -> carrier.sysinfo.v1.Arp
	21, // 17: carrier.sysinfo.v1.NetSurvey.routes:type_name -> carrier.sysinfo.v1.NetRoute
	2,  // 18: carrier.sysinfo.v1.Satellite.constellation:type_name -> carrier.sysinfo.v1.Satellite.Constellation
	3,  // 19: carrier.sysinfo.v1.Location.fix:type_name -> carrier.sysinfo.v1.Location.Fix
	23, // 20: carrier.sysinfo.v1.Location.accuracity:type_name -> carrier.sysinfo.v1.LocationAccuracity
	24, // 21: carrier.sysinfo.v1.Location.satellites:type_name -> carrier.sysinfo.v1.Satellite
	25, // 22: carrier.sysinfo.v1.Location.velocity:type_name -> carrier.sysinfo.v1.LocationVelocity
	4,  // 23: carrier.sysinfo.v1.Sensor.vtype:type_name -> carrier.sysinfo.v1.Sensor.ValueType
	27, // 24: carrier.sysinfo.v1.Sensors.sensors:type_name -> carrier.sysinfo.v1.Sensor
	29, // 25: carrier.sysinfo.v1.SysinfoService.sysinfo:input_type -> carrier.sysinfo.v1.None
	29, // 26: carrier.sysinfo.v1.SysinfoService.netsurvey:input_type -> carrier.sysinfo.v1.None
	29, // 27: carrier.sysinfo.v1.SysinfoService.sensors:input_type -> carrier.sysinfo.v1.None
	16, // 28: carrier.sysinfo.v1.SysinfoService.sysinfo:output_type -> carrier.sysinfo.v1.Sysinfo
	22, // 29: carrier.sysinfo.v1.SysinfoService.netsurvey:output_type -> carrier.sysinfo.v1.NetSurvey
	28, // 30: carrier.sysinfo.v1.SysinfoService.sensors:output_type -> carrier.sysinfo.v1.Sensors
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_carrier_sysinfo_v1_proto_init() }
func file_carrier_sysinfo_v1_proto_init() {
	if File_carrier_sysinfo_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carrier_sysinfo_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Load); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Firmware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Netdev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Switch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bootloader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Belltower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sysinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiStation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DhcpLease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetSurvey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationAccuracity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Satellite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationVelocity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sensors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_sysinfo_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_carrier_sysinfo_v1_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SwitchPort_Network)(nil),
		(*SwitchPort_Device)(nil),
		(*SwitchPort_None)(nil),
	}
	file_carrier_sysinfo_v1_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Arp_Value)(nil),
		(*Arp_Null)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carrier_sysinfo_v1_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carrier_sysinfo_v1_proto_goTypes,
		DependencyIndexes: file_carrier_sysinfo_v1_proto_depIdxs,
		EnumInfos:         file_carrier_sysinfo_v1_proto_enumTypes,
		MessageInfos:      file_carrier_sysinfo_v1_proto_msgTypes,
	}.Build()
	File_carrier_sysinfo_v1_proto = out.File
	file_carrier_sysinfo_v1_proto_rawDesc = nil
	file_carrier_sysinfo_v1_proto_goTypes = nil
	file_carrier_sysinfo_v1_proto_depIdxs = nil
}
