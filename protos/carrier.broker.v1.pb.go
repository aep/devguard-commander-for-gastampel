// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.0
// source: carrier.broker.v1.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Path_Category int32

const (
	Path_Invalid      Path_Category = 0
	Path_Local        Path_Category = 1
	Path_Internet     Path_Category = 2
	Path_BrokerOrigin Path_Category = 3
)

// Enum value maps for Path_Category.
var (
	Path_Category_name = map[int32]string{
		0: "Invalid",
		1: "Local",
		2: "Internet",
		3: "BrokerOrigin",
	}
	Path_Category_value = map[string]int32{
		"Invalid":      0,
		"Local":        1,
		"Internet":     2,
		"BrokerOrigin": 3,
	}
)

func (x Path_Category) Enum() *Path_Category {
	p := new(Path_Category)
	*p = x
	return p
}

func (x Path_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Path_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_broker_v1_proto_enumTypes[0].Descriptor()
}

func (Path_Category) Type() protoreflect.EnumType {
	return &file_carrier_broker_v1_proto_enumTypes[0]
}

func (x Path_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Path_Category.Descriptor instead.
func (Path_Category) EnumDescriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{0, 0}
}

type ConnectRequest_TargetType int32

const (
	ConnectRequest_Identity ConnectRequest_TargetType = 0
	ConnectRequest_Alias    ConnectRequest_TargetType = 1
)

// Enum value maps for ConnectRequest_TargetType.
var (
	ConnectRequest_TargetType_name = map[int32]string{
		0: "Identity",
		1: "Alias",
	}
	ConnectRequest_TargetType_value = map[string]int32{
		"Identity": 0,
		"Alias":    1,
	}
)

func (x ConnectRequest_TargetType) Enum() *ConnectRequest_TargetType {
	p := new(ConnectRequest_TargetType)
	*p = x
	return p
}

func (x ConnectRequest_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectRequest_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_carrier_broker_v1_proto_enumTypes[1].Descriptor()
}

func (ConnectRequest_TargetType) Type() protoreflect.EnumType {
	return &file_carrier_broker_v1_proto_enumTypes[1]
}

func (x ConnectRequest_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectRequest_TargetType.Descriptor instead.
func (ConnectRequest_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{11, 0}
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipaddr   string        `protobuf:"bytes,1,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	Category Path_Category `protobuf:"varint,2,opt,name=category,proto3,enum=carrier.broker.v1.Path_Category" json:"category,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{0}
}

func (x *Path) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *Path) GetCategory() Path_Category {
	if x != nil {
		return x.Category
	}
	return Path_Invalid
}

type FilterByRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles uint32 `protobuf:"fixed32,1,opt,name=roles,proto3" json:"roles,omitempty"`
}

func (x *FilterByRole) Reset() {
	*x = FilterByRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterByRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterByRole) ProtoMessage() {}

func (x *FilterByRole) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterByRole.ProtoReflect.Descriptor instead.
func (*FilterByRole) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{1}
}

func (x *FilterByRole) GetRoles() uint32 {
	if x != nil {
		return x.Roles
	}
	return 0
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *FilterByRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetRole() *FilterByRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shadow      []byte    `protobuf:"bytes,1,opt,name=shadow,proto3" json:"shadow,omitempty"`
	Filter      []*Filter `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty"`
	GroupKey    []byte    `protobuf:"bytes,3,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	GroupShard  []byte    `protobuf:"bytes,4,opt,name=group_shard,json=groupShard,proto3" json:"group_shard,omitempty"`
	ShardWeight uint32    `protobuf:"varint,5,opt,name=shard_weight,json=shardWeight,proto3" json:"shard_weight,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeRequest) GetShadow() []byte {
	if x != nil {
		return x.Shadow
	}
	return nil
}

func (x *SubscribeRequest) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubscribeRequest) GetGroupKey() []byte {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *SubscribeRequest) GetGroupShard() []byte {
	if x != nil {
		return x.GroupShard
	}
	return nil
}

func (x *SubscribeRequest) GetShardWeight() uint32 {
	if x != nil {
		return x.ShardWeight
	}
	return 0
}

type Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity []byte `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Xaddr    []byte `protobuf:"bytes,2,opt,name=xaddr,proto3" json:"xaddr,omitempty"`
}

func (x *Publish) Reset() {
	*x = Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publish) ProtoMessage() {}

func (x *Publish) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publish.ProtoReflect.Descriptor instead.
func (*Publish) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{4}
}

func (x *Publish) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *Publish) GetXaddr() []byte {
	if x != nil {
		return x.Xaddr
	}
	return nil
}

type Unpublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity []byte `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *Unpublish) Reset() {
	*x = Unpublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unpublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unpublish) ProtoMessage() {}

func (x *Unpublish) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unpublish.ProtoReflect.Descriptor instead.
func (*Unpublish) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{5}
}

func (x *Unpublish) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

type Supersede struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Supersede) Reset() {
	*x = Supersede{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Supersede) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Supersede) ProtoMessage() {}

func (x *Supersede) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Supersede.ProtoReflect.Descriptor instead.
func (*Supersede) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{6}
}

type SubscribeChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to M:
	//	*SubscribeChange_Publish
	//	*SubscribeChange_Unpublish
	//	*SubscribeChange_Supersede
	M isSubscribeChange_M `protobuf_oneof:"m"`
}

func (x *SubscribeChange) Reset() {
	*x = SubscribeChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeChange) ProtoMessage() {}

func (x *SubscribeChange) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeChange.ProtoReflect.Descriptor instead.
func (*SubscribeChange) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{7}
}

func (m *SubscribeChange) GetM() isSubscribeChange_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *SubscribeChange) GetPublish() *Publish {
	if x, ok := x.GetM().(*SubscribeChange_Publish); ok {
		return x.Publish
	}
	return nil
}

func (x *SubscribeChange) GetUnpublish() *Unpublish {
	if x, ok := x.GetM().(*SubscribeChange_Unpublish); ok {
		return x.Unpublish
	}
	return nil
}

func (x *SubscribeChange) GetSupersede() *Supersede {
	if x, ok := x.GetM().(*SubscribeChange_Supersede); ok {
		return x.Supersede
	}
	return nil
}

type isSubscribeChange_M interface {
	isSubscribeChange_M()
}

type SubscribeChange_Publish struct {
	Publish *Publish `protobuf:"bytes,1,opt,name=publish,proto3,oneof"`
}

type SubscribeChange_Unpublish struct {
	Unpublish *Unpublish `protobuf:"bytes,2,opt,name=unpublish,proto3,oneof"`
}

type SubscribeChange_Supersede struct {
	Supersede *Supersede `protobuf:"bytes,3,opt,name=supersede,proto3,oneof"`
}

func (*SubscribeChange_Publish) isSubscribeChange_M() {}

func (*SubscribeChange_Unpublish) isSubscribeChange_M() {}

func (*SubscribeChange_Supersede) isSubscribeChange_M() {}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this used to be xaddr, but that never made sense.
	// because the p2p buildup uses an unencrypted initiator without DH
	Unused  []byte `protobuf:"bytes,1,opt,name=unused,proto3" json:"unused,omitempty"`
	Network []byte `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	// backwards compat. dont send alias into publish stream unless flag is set
	ReceiveAlias bool `protobuf:"varint,3,opt,name=receive_alias,json=receiveAlias,proto3" json:"receive_alias,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{8}
}

func (x *PublishRequest) GetUnused() []byte {
	if x != nil {
		return x.Unused
	}
	return nil
}

func (x *PublishRequest) GetNetwork() []byte {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *PublishRequest) GetReceiveAlias() bool {
	if x != nil {
		return x.ReceiveAlias
	}
	return false
}

type Alias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias uint64 `protobuf:"varint,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *Alias) Reset() {
	*x = Alias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alias) ProtoMessage() {}

func (x *Alias) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alias.ProtoReflect.Descriptor instead.
func (*Alias) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{9}
}

func (x *Alias) GetAlias() uint64 {
	if x != nil {
		return x.Alias
	}
	return 0
}

type PublishChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to M:
	//	*PublishChange_Supersede
	//	*PublishChange_Alias
	M isPublishChange_M `protobuf_oneof:"m"`
}

func (x *PublishChange) Reset() {
	*x = PublishChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishChange) ProtoMessage() {}

func (x *PublishChange) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishChange.ProtoReflect.Descriptor instead.
func (*PublishChange) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{10}
}

func (m *PublishChange) GetM() isPublishChange_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *PublishChange) GetSupersede() *Supersede {
	if x, ok := x.GetM().(*PublishChange_Supersede); ok {
		return x.Supersede
	}
	return nil
}

func (x *PublishChange) GetAlias() *Alias {
	if x, ok := x.GetM().(*PublishChange_Alias); ok {
		return x.Alias
	}
	return nil
}

type isPublishChange_M interface {
	isPublishChange_M()
}

type PublishChange_Supersede struct {
	Supersede *Supersede `protobuf:"bytes,1,opt,name=supersede,proto3,oneof"`
}

type PublishChange_Alias struct {
	Alias *Alias `protobuf:"bytes,2,opt,name=alias,proto3,oneof"`
}

func (*PublishChange_Supersede) isPublishChange_M() {}

func (*PublishChange_Alias) isPublishChange_M() {}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     []byte                    `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Timestamp  uint64                    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Handshake  []byte                    `protobuf:"bytes,3,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Paths      []*Path                   `protobuf:"bytes,4,rep,name=paths,proto3" json:"paths,omitempty"`
	Principal  []byte                    `protobuf:"bytes,5,opt,name=principal,proto3" json:"principal,omitempty"`
	Timeout    uint32                    `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	TargetType ConnectRequest_TargetType `protobuf:"varint,7,opt,name=target_type,json=targetType,proto3,enum=carrier.broker.v1.ConnectRequest_TargetType" json:"target_type,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectRequest) GetTarget() []byte {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ConnectRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConnectRequest) GetHandshake() []byte {
	if x != nil {
		return x.Handshake
	}
	return nil
}

func (x *ConnectRequest) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ConnectRequest) GetPrincipal() []byte {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *ConnectRequest) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ConnectRequest) GetTargetType() ConnectRequest_TargetType {
	if x != nil {
		return x.TargetType
	}
	return ConnectRequest_Identity
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool    `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Handshake []byte  `protobuf:"bytes,2,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Route     uint64  `protobuf:"varint,3,opt,name=route,proto3" json:"route,omitempty"`
	Paths     []*Path `protobuf:"bytes,4,rep,name=paths,proto3" json:"paths,omitempty"`
	Error     string  `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ConnectResponse) GetHandshake() []byte {
	if x != nil {
		return x.Handshake
	}
	return nil
}

func (x *ConnectResponse) GetRoute() uint64 {
	if x != nil {
		return x.Route
	}
	return 0
}

func (x *ConnectResponse) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ConnectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ClusterShard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to M:
	//	*ClusterShard_This
	//	*ClusterShard_Other
	M isClusterShard_M `protobuf_oneof:"m"`
}

func (x *ClusterShard) Reset() {
	*x = ClusterShard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterShard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterShard) ProtoMessage() {}

func (x *ClusterShard) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterShard.ProtoReflect.Descriptor instead.
func (*ClusterShard) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{13}
}

func (m *ClusterShard) GetM() isClusterShard_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *ClusterShard) GetThis() bool {
	if x, ok := x.GetM().(*ClusterShard_This); ok {
		return x.This
	}
	return false
}

func (x *ClusterShard) GetOther() string {
	if x, ok := x.GetM().(*ClusterShard_Other); ok {
		return x.Other
	}
	return ""
}

type isClusterShard_M interface {
	isClusterShard_M()
}

type ClusterShard_This struct {
	This bool `protobuf:"varint,1,opt,name=this,proto3,oneof"`
}

type ClusterShard_Other struct {
	Other string `protobuf:"bytes,2,opt,name=other,proto3,oneof"`
}

func (*ClusterShard_This) isClusterShard_M() {}

func (*ClusterShard_Other) isClusterShard_M() {}

type ExceptionalRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity []byte `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Types that are assignable to M:
	//	*ExceptionalRoute_This
	//	*ExceptionalRoute_Other
	//	*ExceptionalRoute_Blocked
	M isExceptionalRoute_M `protobuf_oneof:"m"`
}

func (x *ExceptionalRoute) Reset() {
	*x = ExceptionalRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionalRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionalRoute) ProtoMessage() {}

func (x *ExceptionalRoute) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionalRoute.ProtoReflect.Descriptor instead.
func (*ExceptionalRoute) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{14}
}

func (x *ExceptionalRoute) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (m *ExceptionalRoute) GetM() isExceptionalRoute_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *ExceptionalRoute) GetThis() bool {
	if x, ok := x.GetM().(*ExceptionalRoute_This); ok {
		return x.This
	}
	return false
}

func (x *ExceptionalRoute) GetOther() string {
	if x, ok := x.GetM().(*ExceptionalRoute_Other); ok {
		return x.Other
	}
	return ""
}

func (x *ExceptionalRoute) GetBlocked() bool {
	if x, ok := x.GetM().(*ExceptionalRoute_Blocked); ok {
		return x.Blocked
	}
	return false
}

type isExceptionalRoute_M interface {
	isExceptionalRoute_M()
}

type ExceptionalRoute_This struct {
	This bool `protobuf:"varint,2,opt,name=this,proto3,oneof"`
}

type ExceptionalRoute_Other struct {
	Other string `protobuf:"bytes,3,opt,name=other,proto3,oneof"`
}

type ExceptionalRoute_Blocked struct {
	Blocked bool `protobuf:"varint,4,opt,name=blocked,proto3,oneof"`
}

func (*ExceptionalRoute_This) isExceptionalRoute_M() {}

func (*ExceptionalRoute_Other) isExceptionalRoute_M() {}

func (*ExceptionalRoute_Blocked) isExceptionalRoute_M() {}

type ClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards                       []*ClusterShard     `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	ExceptionalRoutes            []*ExceptionalRoute `protobuf:"bytes,2,rep,name=exceptional_routes,json=exceptionalRoutes,proto3" json:"exceptional_routes,omitempty"`
	Epoch                        uint64              `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	DefaultShadowPublisherLimit  uint64              `protobuf:"varint,4,opt,name=default_shadow_publisher_limit,json=defaultShadowPublisherLimit,proto3" json:"default_shadow_publisher_limit,omitempty"`
	DefaultShadowTrafficLimit_32 uint64              `protobuf:"varint,5,opt,name=default_shadow_traffic_limit_32,json=defaultShadowTrafficLimit32,proto3" json:"default_shadow_traffic_limit_32,omitempty"`
}

func (x *ClusterConfig) Reset() {
	*x = ClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfig) ProtoMessage() {}

func (x *ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{15}
}

func (x *ClusterConfig) GetShards() []*ClusterShard {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ClusterConfig) GetExceptionalRoutes() []*ExceptionalRoute {
	if x != nil {
		return x.ExceptionalRoutes
	}
	return nil
}

func (x *ClusterConfig) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ClusterConfig) GetDefaultShadowPublisherLimit() uint64 {
	if x != nil {
		return x.DefaultShadowPublisherLimit
	}
	return 0
}

func (x *ClusterConfig) GetDefaultShadowTrafficLimit_32() uint64 {
	if x != nil {
		return x.DefaultShadowTrafficLimit_32
	}
	return 0
}

type ClusterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ClusterConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ClusterState) Reset() {
	*x = ClusterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterState) ProtoMessage() {}

func (x *ClusterState) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterState.ProtoReflect.Descriptor instead.
func (*ClusterState) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{16}
}

func (x *ClusterState) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type TraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *TraceRequest) Reset() {
	*x = TraceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceRequest) ProtoMessage() {}

func (x *TraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceRequest.ProtoReflect.Descriptor instead.
func (*TraceRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{17}
}

func (x *TraceRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type TraceShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xaddress           []byte `protobuf:"bytes,1,opt,name=xaddress,proto3" json:"xaddress,omitempty"`
	PublisherCount     uint64 `protobuf:"varint,2,opt,name=publisher_count,json=publisherCount,proto3" json:"publisher_count,omitempty"`
	PublisherSoftLimit uint64 `protobuf:"varint,3,opt,name=publisher_soft_limit,json=publisherSoftLimit,proto3" json:"publisher_soft_limit,omitempty"`
	PublisherHardLimit uint64 `protobuf:"varint,4,opt,name=publisher_hard_limit,json=publisherHardLimit,proto3" json:"publisher_hard_limit,omitempty"`
	TrafficEpoch_64    uint64 `protobuf:"varint,5,opt,name=traffic_epoch_64,json=trafficEpoch64,proto3" json:"traffic_epoch_64,omitempty"`
	TrafficLimit_64    uint64 `protobuf:"varint,6,opt,name=traffic_limit_64,json=trafficLimit64,proto3" json:"traffic_limit_64,omitempty"`
}

func (x *TraceShadow) Reset() {
	*x = TraceShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceShadow) ProtoMessage() {}

func (x *TraceShadow) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceShadow.ProtoReflect.Descriptor instead.
func (*TraceShadow) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{18}
}

func (x *TraceShadow) GetXaddress() []byte {
	if x != nil {
		return x.Xaddress
	}
	return nil
}

func (x *TraceShadow) GetPublisherCount() uint64 {
	if x != nil {
		return x.PublisherCount
	}
	return 0
}

func (x *TraceShadow) GetPublisherSoftLimit() uint64 {
	if x != nil {
		return x.PublisherSoftLimit
	}
	return 0
}

func (x *TraceShadow) GetPublisherHardLimit() uint64 {
	if x != nil {
		return x.PublisherHardLimit
	}
	return 0
}

func (x *TraceShadow) GetTrafficEpoch_64() uint64 {
	if x != nil {
		return x.TrafficEpoch_64
	}
	return 0
}

func (x *TraceShadow) GetTrafficLimit_64() uint64 {
	if x != nil {
		return x.TrafficLimit_64
	}
	return 0
}

type TraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publishing []*TraceShadow `protobuf:"bytes,1,rep,name=publishing,proto3" json:"publishing,omitempty"`
	Epoch      uint64         `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	RxBytes_32 uint64         `protobuf:"varint,3,opt,name=rx_bytes_32,json=rxBytes32,proto3" json:"rx_bytes_32,omitempty"`
	TxBytes_32 uint64         `protobuf:"varint,4,opt,name=tx_bytes_32,json=txBytes32,proto3" json:"tx_bytes_32,omitempty"`
	LastSeen   uint64         `protobuf:"varint,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	FirstSeen  uint64         `protobuf:"varint,6,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	Allocation string         `protobuf:"bytes,7,opt,name=allocation,proto3" json:"allocation,omitempty"`
	Brokerip   string         `protobuf:"bytes,8,opt,name=brokerip,proto3" json:"brokerip,omitempty"`
	PktsSent   uint64         `protobuf:"varint,9,opt,name=pkts_sent,json=pktsSent,proto3" json:"pkts_sent,omitempty"`
	PktsLost   uint64         `protobuf:"varint,10,opt,name=pkts_lost,json=pktsLost,proto3" json:"pkts_lost,omitempty"`
	Rtt        uint64         `protobuf:"varint,11,opt,name=rtt,proto3" json:"rtt,omitempty"`
	Alias      uint64         `protobuf:"varint,12,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *TraceResponse) Reset() {
	*x = TraceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceResponse) ProtoMessage() {}

func (x *TraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceResponse.ProtoReflect.Descriptor instead.
func (*TraceResponse) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{19}
}

func (x *TraceResponse) GetPublishing() []*TraceShadow {
	if x != nil {
		return x.Publishing
	}
	return nil
}

func (x *TraceResponse) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *TraceResponse) GetRxBytes_32() uint64 {
	if x != nil {
		return x.RxBytes_32
	}
	return 0
}

func (x *TraceResponse) GetTxBytes_32() uint64 {
	if x != nil {
		return x.TxBytes_32
	}
	return 0
}

func (x *TraceResponse) GetLastSeen() uint64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *TraceResponse) GetFirstSeen() uint64 {
	if x != nil {
		return x.FirstSeen
	}
	return 0
}

func (x *TraceResponse) GetAllocation() string {
	if x != nil {
		return x.Allocation
	}
	return ""
}

func (x *TraceResponse) GetBrokerip() string {
	if x != nil {
		return x.Brokerip
	}
	return ""
}

func (x *TraceResponse) GetPktsSent() uint64 {
	if x != nil {
		return x.PktsSent
	}
	return 0
}

func (x *TraceResponse) GetPktsLost() uint64 {
	if x != nil {
		return x.PktsLost
	}
	return 0
}

func (x *TraceResponse) GetRtt() uint64 {
	if x != nil {
		return x.Rtt
	}
	return 0
}

func (x *TraceResponse) GetAlias() uint64 {
	if x != nil {
		return x.Alias
	}
	return 0
}

type PeerConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity  []byte  `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Timestamp uint64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Handshake []byte  `protobuf:"bytes,3,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Route     uint64  `protobuf:"varint,4,opt,name=route,proto3" json:"route,omitempty"`
	Paths     []*Path `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *PeerConnectRequest) Reset() {
	*x = PeerConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectRequest) ProtoMessage() {}

func (x *PeerConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectRequest.ProtoReflect.Descriptor instead.
func (*PeerConnectRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{20}
}

func (x *PeerConnectRequest) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *PeerConnectRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PeerConnectRequest) GetHandshake() []byte {
	if x != nil {
		return x.Handshake
	}
	return nil
}

func (x *PeerConnectRequest) GetRoute() uint64 {
	if x != nil {
		return x.Route
	}
	return 0
}

func (x *PeerConnectRequest) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

type PeerConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool    `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Handshake []byte  `protobuf:"bytes,2,opt,name=handshake,proto3" json:"handshake,omitempty"`
	Paths     []*Path `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
	Error     string  `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PeerConnectResponse) Reset() {
	*x = PeerConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectResponse) ProtoMessage() {}

func (x *PeerConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectResponse.ProtoReflect.Descriptor instead.
func (*PeerConnectResponse) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{21}
}

func (x *PeerConnectResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PeerConnectResponse) GetHandshake() []byte {
	if x != nil {
		return x.Handshake
	}
	return nil
}

func (x *PeerConnectResponse) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *PeerConnectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ProtoHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Len uint64 `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *ProtoHeader) Reset() {
	*x = ProtoHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoHeader) ProtoMessage() {}

func (x *ProtoHeader) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoHeader.ProtoReflect.Descriptor instead.
func (*ProtoHeader) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{22}
}

func (x *ProtoHeader) GetLen() uint64 {
	if x != nil {
		return x.Len
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{23}
}

type Confirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Confirmation) Reset() {
	*x = Confirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Confirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Confirmation) ProtoMessage() {}

func (x *Confirmation) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Confirmation.ProtoReflect.Descriptor instead.
func (*Confirmation) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{24}
}

func (x *Confirmation) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Confirmation) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MoveInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipaddr string `protobuf:"bytes,1,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	Xaddr  []byte `protobuf:"bytes,2,opt,name=xaddr,proto3" json:"xaddr,omitempty"`
}

func (x *MoveInstruction) Reset() {
	*x = MoveInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveInstruction) ProtoMessage() {}

func (x *MoveInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveInstruction.ProtoReflect.Descriptor instead.
func (*MoveInstruction) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{25}
}

func (x *MoveInstruction) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *MoveInstruction) GetXaddr() []byte {
	if x != nil {
		return x.Xaddr
	}
	return nil
}

type InnerTraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to M:
	//	*InnerTraceRequest_Invalid
	//	*InnerTraceRequest_Ping
	M isInnerTraceRequest_M `protobuf_oneof:"m"`
}

func (x *InnerTraceRequest) Reset() {
	*x = InnerTraceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerTraceRequest) ProtoMessage() {}

func (x *InnerTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerTraceRequest.ProtoReflect.Descriptor instead.
func (*InnerTraceRequest) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{26}
}

func (m *InnerTraceRequest) GetM() isInnerTraceRequest_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *InnerTraceRequest) GetInvalid() bool {
	if x, ok := x.GetM().(*InnerTraceRequest_Invalid); ok {
		return x.Invalid
	}
	return false
}

func (x *InnerTraceRequest) GetPing() []byte {
	if x, ok := x.GetM().(*InnerTraceRequest_Ping); ok {
		return x.Ping
	}
	return nil
}

type isInnerTraceRequest_M interface {
	isInnerTraceRequest_M()
}

type InnerTraceRequest_Invalid struct {
	Invalid bool `protobuf:"varint,1,opt,name=Invalid,proto3,oneof"`
}

type InnerTraceRequest_Ping struct {
	Ping []byte `protobuf:"bytes,2,opt,name=Ping,proto3,oneof"`
}

func (*InnerTraceRequest_Invalid) isInnerTraceRequest_M() {}

func (*InnerTraceRequest_Ping) isInnerTraceRequest_M() {}

type InnerTraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to M:
	//	*InnerTraceResponse_Invalid
	//	*InnerTraceResponse_Pong
	M isInnerTraceResponse_M `protobuf_oneof:"m"`
}

func (x *InnerTraceResponse) Reset() {
	*x = InnerTraceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carrier_broker_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerTraceResponse) ProtoMessage() {}

func (x *InnerTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carrier_broker_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerTraceResponse.ProtoReflect.Descriptor instead.
func (*InnerTraceResponse) Descriptor() ([]byte, []int) {
	return file_carrier_broker_v1_proto_rawDescGZIP(), []int{27}
}

func (m *InnerTraceResponse) GetM() isInnerTraceResponse_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (x *InnerTraceResponse) GetInvalid() bool {
	if x, ok := x.GetM().(*InnerTraceResponse_Invalid); ok {
		return x.Invalid
	}
	return false
}

func (x *InnerTraceResponse) GetPong() []byte {
	if x, ok := x.GetM().(*InnerTraceResponse_Pong); ok {
		return x.Pong
	}
	return nil
}

type isInnerTraceResponse_M interface {
	isInnerTraceResponse_M()
}

type InnerTraceResponse_Invalid struct {
	Invalid bool `protobuf:"varint,1,opt,name=Invalid,proto3,oneof"`
}

type InnerTraceResponse_Pong struct {
	Pong []byte `protobuf:"bytes,2,opt,name=Pong,proto3,oneof"`
}

func (*InnerTraceResponse_Invalid) isInnerTraceResponse_M() {}

func (*InnerTraceResponse_Pong) isInnerTraceResponse_M() {}

var File_carrier_broker_v1_proto protoreflect.FileDescriptor

var file_carrier_broker_v1_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xa0, 0x01, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x3c, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x42, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x10, 0x03, 0x22,
	0x24, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3b, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x78, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x78, 0x61, 0x64,
	0x64, 0x72, 0x22, 0x27, 0x0a, 0x09, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x0b, 0x0a, 0x09, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x07, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73,
	0x65, 0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65,
	0x42, 0x03, 0x0a, 0x01, 0x6d, 0x22, 0x67, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x1d,
	0x0a, 0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42,
	0x03, 0x0a, 0x01, 0x6d, 0x22, 0xc1, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x25, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x10, 0x01, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x68, 0x69, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x74, 0x68, 0x69, 0x73, 0x12, 0x16, 0x0a, 0x05, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x42, 0x03, 0x0a, 0x01, 0x6d, 0x22, 0x7d, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x68, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x74, 0x68, 0x69, 0x73, 0x12, 0x16,
	0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x42, 0x03, 0x0a, 0x01, 0x6d, 0x22, 0xbd, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x52, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x11, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x43, 0x0a, 0x1e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x33, 0x32, 0x22, 0x48, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x26, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x78, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x66, 0x74,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x6f, 0x66, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x48, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x36, 0x34, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x36, 0x34,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x36, 0x34, 0x22, 0xff, 0x02, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x52, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0b, 0x72, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x33, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x33, 0x32, 0x12, 0x1e,
	0x0a, 0x0b, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x33, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x33, 0x32, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6b, 0x74, 0x73, 0x53,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x74, 0x73, 0x5f, 0x6c, 0x6f, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6b, 0x74, 0x73, 0x4c, 0x6f, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x74, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72,
	0x74, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x88, 0x01, 0x0a,
	0x13, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1f, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x34, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x78, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x78, 0x61, 0x64, 0x64, 0x72, 0x22, 0x4a, 0x0a, 0x11, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x42,
	0x03, 0x0a, 0x01, 0x6d, 0x22, 0x4b, 0x0a, 0x12, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x42, 0x03, 0x0a, 0x01,
	0x6d, 0x32, 0xff, 0x03, 0x0a, 0x06, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4e, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4b, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0d, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20,
	0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x00, 0x32, 0x62, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carrier_broker_v1_proto_rawDescOnce sync.Once
	file_carrier_broker_v1_proto_rawDescData = file_carrier_broker_v1_proto_rawDesc
)

func file_carrier_broker_v1_proto_rawDescGZIP() []byte {
	file_carrier_broker_v1_proto_rawDescOnce.Do(func() {
		file_carrier_broker_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_carrier_broker_v1_proto_rawDescData)
	})
	return file_carrier_broker_v1_proto_rawDescData
}

var file_carrier_broker_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_carrier_broker_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_carrier_broker_v1_proto_goTypes = []interface{}{
	(Path_Category)(0),             // 0: carrier.broker.v1.Path.Category
	(ConnectRequest_TargetType)(0), // 1: carrier.broker.v1.ConnectRequest.TargetType
	(*Path)(nil),                   // 2: carrier.broker.v1.Path
	(*FilterByRole)(nil),           // 3: carrier.broker.v1.FilterByRole
	(*Filter)(nil),                 // 4: carrier.broker.v1.Filter
	(*SubscribeRequest)(nil),       // 5: carrier.broker.v1.SubscribeRequest
	(*Publish)(nil),                // 6: carrier.broker.v1.Publish
	(*Unpublish)(nil),              // 7: carrier.broker.v1.Unpublish
	(*Supersede)(nil),              // 8: carrier.broker.v1.Supersede
	(*SubscribeChange)(nil),        // 9: carrier.broker.v1.SubscribeChange
	(*PublishRequest)(nil),         // 10: carrier.broker.v1.PublishRequest
	(*Alias)(nil),                  // 11: carrier.broker.v1.Alias
	(*PublishChange)(nil),          // 12: carrier.broker.v1.PublishChange
	(*ConnectRequest)(nil),         // 13: carrier.broker.v1.ConnectRequest
	(*ConnectResponse)(nil),        // 14: carrier.broker.v1.ConnectResponse
	(*ClusterShard)(nil),           // 15: carrier.broker.v1.ClusterShard
	(*ExceptionalRoute)(nil),       // 16: carrier.broker.v1.ExceptionalRoute
	(*ClusterConfig)(nil),          // 17: carrier.broker.v1.ClusterConfig
	(*ClusterState)(nil),           // 18: carrier.broker.v1.ClusterState
	(*TraceRequest)(nil),           // 19: carrier.broker.v1.TraceRequest
	(*TraceShadow)(nil),            // 20: carrier.broker.v1.TraceShadow
	(*TraceResponse)(nil),          // 21: carrier.broker.v1.TraceResponse
	(*PeerConnectRequest)(nil),     // 22: carrier.broker.v1.PeerConnectRequest
	(*PeerConnectResponse)(nil),    // 23: carrier.broker.v1.PeerConnectResponse
	(*ProtoHeader)(nil),            // 24: carrier.broker.v1.ProtoHeader
	(*Empty)(nil),                  // 25: carrier.broker.v1.Empty
	(*Confirmation)(nil),           // 26: carrier.broker.v1.Confirmation
	(*MoveInstruction)(nil),        // 27: carrier.broker.v1.MoveInstruction
	(*InnerTraceRequest)(nil),      // 28: carrier.broker.v1.InnerTraceRequest
	(*InnerTraceResponse)(nil),     // 29: carrier.broker.v1.InnerTraceResponse
}
var file_carrier_broker_v1_proto_depIdxs = []int32{
	0,  // 0: carrier.broker.v1.Path.category:type_name -> carrier.broker.v1.Path.Category
	3,  // 1: carrier.broker.v1.Filter.role:type_name -> carrier.broker.v1.FilterByRole
	4,  // 2: carrier.broker.v1.SubscribeRequest.filter:type_name -> carrier.broker.v1.Filter
	6,  // 3: carrier.broker.v1.SubscribeChange.publish:type_name -> carrier.broker.v1.Publish
	7,  // 4: carrier.broker.v1.SubscribeChange.unpublish:type_name -> carrier.broker.v1.Unpublish
	8,  // 5: carrier.broker.v1.SubscribeChange.supersede:type_name -> carrier.broker.v1.Supersede
	8,  // 6: carrier.broker.v1.PublishChange.supersede:type_name -> carrier.broker.v1.Supersede
	11, // 7: carrier.broker.v1.PublishChange.alias:type_name -> carrier.broker.v1.Alias
	2,  // 8: carrier.broker.v1.ConnectRequest.paths:type_name -> carrier.broker.v1.Path
	1,  // 9: carrier.broker.v1.ConnectRequest.target_type:type_name -> carrier.broker.v1.ConnectRequest.TargetType
	2,  // 10: carrier.broker.v1.ConnectResponse.paths:type_name -> carrier.broker.v1.Path
	15, // 11: carrier.broker.v1.ClusterConfig.shards:type_name -> carrier.broker.v1.ClusterShard
	16, // 12: carrier.broker.v1.ClusterConfig.exceptional_routes:type_name -> carrier.broker.v1.ExceptionalRoute
	17, // 13: carrier.broker.v1.ClusterState.config:type_name -> carrier.broker.v1.ClusterConfig
	20, // 14: carrier.broker.v1.TraceResponse.publishing:type_name -> carrier.broker.v1.TraceShadow
	2,  // 15: carrier.broker.v1.PeerConnectRequest.paths:type_name -> carrier.broker.v1.Path
	2,  // 16: carrier.broker.v1.PeerConnectResponse.paths:type_name -> carrier.broker.v1.Path
	5,  // 17: carrier.broker.v1.Broker.subscribe:input_type -> carrier.broker.v1.SubscribeRequest
	10, // 18: carrier.broker.v1.Broker.publish:input_type -> carrier.broker.v1.PublishRequest
	13, // 19: carrier.broker.v1.Broker.connect:input_type -> carrier.broker.v1.ConnectRequest
	19, // 20: carrier.broker.v1.Broker.trace:input_type -> carrier.broker.v1.TraceRequest
	25, // 21: carrier.broker.v1.Broker.get_cluster:input_type -> carrier.broker.v1.Empty
	17, // 22: carrier.broker.v1.Broker.patch_cluster:input_type -> carrier.broker.v1.ClusterConfig
	22, // 23: carrier.broker.v1.Peer.connect:input_type -> carrier.broker.v1.PeerConnectRequest
	9,  // 24: carrier.broker.v1.Broker.subscribe:output_type -> carrier.broker.v1.SubscribeChange
	12, // 25: carrier.broker.v1.Broker.publish:output_type -> carrier.broker.v1.PublishChange
	14, // 26: carrier.broker.v1.Broker.connect:output_type -> carrier.broker.v1.ConnectResponse
	21, // 27: carrier.broker.v1.Broker.trace:output_type -> carrier.broker.v1.TraceResponse
	17, // 28: carrier.broker.v1.Broker.get_cluster:output_type -> carrier.broker.v1.ClusterConfig
	26, // 29: carrier.broker.v1.Broker.patch_cluster:output_type -> carrier.broker.v1.Confirmation
	23, // 30: carrier.broker.v1.Peer.connect:output_type -> carrier.broker.v1.PeerConnectResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_carrier_broker_v1_proto_init() }
func file_carrier_broker_v1_proto_init() {
	if File_carrier_broker_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carrier_broker_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterByRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unpublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Supersede); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterShard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionalRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Confirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerTraceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carrier_broker_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerTraceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_carrier_broker_v1_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SubscribeChange_Publish)(nil),
		(*SubscribeChange_Unpublish)(nil),
		(*SubscribeChange_Supersede)(nil),
	}
	file_carrier_broker_v1_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*PublishChange_Supersede)(nil),
		(*PublishChange_Alias)(nil),
	}
	file_carrier_broker_v1_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ClusterShard_This)(nil),
		(*ClusterShard_Other)(nil),
	}
	file_carrier_broker_v1_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ExceptionalRoute_This)(nil),
		(*ExceptionalRoute_Other)(nil),
		(*ExceptionalRoute_Blocked)(nil),
	}
	file_carrier_broker_v1_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*InnerTraceRequest_Invalid)(nil),
		(*InnerTraceRequest_Ping)(nil),
	}
	file_carrier_broker_v1_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*InnerTraceResponse_Invalid)(nil),
		(*InnerTraceResponse_Pong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carrier_broker_v1_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_carrier_broker_v1_proto_goTypes,
		DependencyIndexes: file_carrier_broker_v1_proto_depIdxs,
		EnumInfos:         file_carrier_broker_v1_proto_enumTypes,
		MessageInfos:      file_carrier_broker_v1_proto_msgTypes,
	}.Build()
	File_carrier_broker_v1_proto = out.File
	file_carrier_broker_v1_proto_rawDesc = nil
	file_carrier_broker_v1_proto_goTypes = nil
	file_carrier_broker_v1_proto_depIdxs = nil
}
